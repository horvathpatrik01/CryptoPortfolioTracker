<?xml version="1.0" encoding="utf-8" ?>
<mct:Popup
    x:Class="CryptoPortfolioTracker.Views.Popups.AvatarPopup"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:CryptoPortfolioTracker.Converters"
    xmlns:mct="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui"
    xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
    xmlns:templates="clr-namespace:CryptoPortfolioTracker.Views.Templates"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewmodels="clr-namespace:CryptoPortfolioTracker.ViewModels"
    x:DataType="viewmodels:AvatarIconViewModel"
    CanBeDismissedByTappingOutsideOfPopup="False"
    Shell.NavBarIsVisible="False"
    Shell.TabBarIsVisible="False">

    <mct:Popup.Resources>
        <converters:IconColorNumToColorConverter x:Key="IconColorConverter" />
        <ResourceDictionary>
            <!--  Color selector button  -->
            <Style x:Key="selectableColor" TargetType="Ellipse">
                <Setter Property="HeightRequest" Value="20" />
                <Setter Property="WidthRequest" Value="20" />
                <Setter Property="HorizontalOptions" Value="Start" />
                <Setter Property="VerticalOptions" Value="Start" />
                <Setter Property="StrokeThickness" Value="4" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource LightPrimary}, Dark={StaticResource DarkSecondary}}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource LightPrimary}, Dark={StaticResource DarkSecondary}}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="Stroke" Value="Transparent" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style x:Key="emojiLabel" TargetType="Label">
                <Setter Property="HorizontalOptions" Value="Center" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="FontSize" Value="32" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="FontSize" Value="32" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="FontSize" Value="28" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </mct:Popup.Resources>

    <VerticalStackLayout
        x:Name="CreateLayout"
        Padding="20"
        HeightRequest="600"
        VerticalOptions="Center"
        WidthRequest="500">

        <HorizontalStackLayout Margin="0,0,0,20">
            <Label
                Margin="0,0,10,0"
                FontAttributes="Bold"
                FontSize="24"
                Text="{mi:Material Icon=ArrowBack}"
                VerticalOptions="End">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="BackCommand" />
                </Label.GestureRecognizers>
            </Label>
            <Label
                FontAttributes="Bold"
                FontSize="24"
                Text="Change avatar" />
        </HorizontalStackLayout>

        <Grid Margin="10">
            <Ellipse
                HeightRequest="80"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                WidthRequest="80">
                <Ellipse.Fill>
                    <SolidColorBrush Color="{Binding NewPortfolioIconColor, Converter={StaticResource IconColorConverter}}" />
                </Ellipse.Fill>
            </Ellipse>
            <Label
                FontSize="36"
                HorizontalOptions="Center"
                Text="{Binding NewPortfolioIcon}"
                VerticalOptions="Center" />
        </Grid>

        <!--  Select background color  -->
        <CollectionView
            HorizontalOptions="Center"
            ItemsSource="{Binding ColorIndexes}"
            SelectedItem="{Binding NewPortfolioIconColor, Mode=TwoWay}"
            SelectionMode="Single">
            <CollectionView.ItemsLayout>
                <GridItemsLayout HorizontalItemSpacing="5" Orientation="Horizontal" />
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="x:Int32">
                    <Ellipse Style="{StaticResource selectableColor}">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{Binding Converter={StaticResource IconColorConverter}}" />
                        </Ellipse.Fill>
                    </Ellipse>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!--  Select emoji  -->

        <CollectionView
            ItemsSource="{Binding EmojiItemSource, Mode=OneTime}"
            SelectedItem="{Binding NewPortfolioIcon, Mode=OneWay}"
            SelectionChangedCommand="{Binding ChangeEmojiCommand}"
            SelectionChangedCommandParameter="{Binding Source={RelativeSource Self}, Path=SelectedItem}"
            SelectionMode="Single">

            <CollectionView.ItemsLayout>
                <GridItemsLayout
                    HorizontalItemSpacing="10"
                    Orientation="Vertical"
                    Span="7"
                    VerticalItemSpacing="10" />
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="x:String">
                    <Label Style="{StaticResource emojiLabel}" Text="{Binding}" />
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <Button
            x:Name="saveButton"
            Margin="0,20,0,20"
            Clicked="SaveAvatar"
            Command="{Binding SaveEmojiCommand}"
            IsEnabled="True"
            Style="{StaticResource Button}"
            Text="Save" />
    </VerticalStackLayout>
</mct:Popup>