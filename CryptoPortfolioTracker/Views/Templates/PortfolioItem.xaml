<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="CryptoPortfolioTracker.Views.Templates.PortfolioItem"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
    xmlns:viewmodels="clr-namespace:CryptoPortfolioTracker.ViewModels">
    <ContentView.Content>

        <Frame
            Padding="10"
            BackgroundColor="Transparent"
            BorderColor="Transparent"
            CornerRadius="5"
            HeightRequest="60">
            <Grid ColumnDefinitions="Auto,Auto,1*">
                <!--  Icon  -->
                <Image
                    Grid.Column="0"
                    HeightRequest="40"
                    Source="{Binding Icon}"
                    WidthRequest="40" />
                <Grid Grid.Column="1" RowDefinitions="Auto,1*">
                    <!--  Name  -->
                    <Label
                        Grid.Row="0"
                        FontAttributes="Bold"
                        FontSize="15"
                        Text="{Binding Name}"
                        VerticalOptions="Center" />
                    <!--  Value  -->
                    <Label
                        Grid.Row="1"
                        FontAttributes="None"
                        FontSize="12"
                        VerticalOptions="Center">
                        123$
                    </Label>
                </Grid>

                <Grid
                    Grid.Column="2"
                    ColumnDefinitions="Auto,Auto"
                    ColumnSpacing="10"
                    HorizontalOptions="End"
                    VerticalOptions="Center">

                    <!--  Edit button  -->
                    <Label
                        x:Name="editButton"
                        IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:PortfolioViewModel}}, Path=IsEditing}"
                        Style="{x:StaticResource LabelButton}"
                        Text="{mi:Material Icon=Edit,
                                           IconSize=20}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Tapped="OnEditTapped" />
                        </Label.GestureRecognizers>
                    </Label>

                    <!--  Delete button  -->
                    <Label
                        x:Name="deleteButton"
                        Grid.Column="2"
                        IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:PortfolioViewModel}}, Path=IsEditing}"
                        Style="{x:StaticResource LabelButton}"
                        Text="{mi:Material Icon=Delete,
                                           IconSize=20}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Tapped="OnDeleteTapped" />
                        </Label.GestureRecognizers>
                    </Label>
                </Grid>
            </Grid>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{x:StaticResource Transparent}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightTertiary}, Dark={StaticResource DarkTertiary}}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </VisualStateManager.VisualStateGroups>
        </Frame>

    </ContentView.Content>
</ContentView>